stages:
  - test
  - publish
  - deploy

variables:
  TAG_LATEST: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:latest
  TAG_COMMIT: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:$CI_COMMIT_SHORT_SHA
  POSTGRES_DB: voiladb
  POSTGRES_USER: voila
  POSTGRES_PASSWORD: password
  PGDATA: "/var/lib/postgresql/data"
  POSTGRES_INITDB_ARGS: "--encoding=UTF8 --data-checksums"
  MYSQL_DATABASE: voiladb
  MYSQL_ROOT_PASSWORD: password
  DOCKER_REGISTRY: 818879812205.dkr.ecr.eu-west-1.amazonaws.com
  AWS_DEFAULT_REGION: eu-west-1
  APP_NAME: voila-repo
  DOCKER_HOST: tcp://docker:2375
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""

test:
  image: openjdk:11-jdk
  stage: test
  services:
    - postgres:12.2-alpine
  script:
    - cp $application_cicd_posgres_properties src/main/resources/application.properties
    - ./mvnw clean test


publish_stage:
  image: docker:latest
  stage: publish
  services:
    - docker:dind
  script:
    - cp $application_staging_mysql_properties src/main/resources/application.properties
    - docker build . -t $TAG_COMMIT -t $TAG_LATEST
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker push $TAG_COMMIT
    - docker push $TAG_LATEST
  only:
    - master

publish_ecr:
  stage: publish
  image: 
    name: docker:latest
  services:
    - docker:19-dind
  before_script:
    - echo $application_prod_mysql_properties
    - apk add --no-cache curl jq python3 py3-pip
    - pip install awscli
    - aws ecr get-login-password | docker login --username AWS --password-stdin $DOCKER_REGISTRY
    - aws --version
    - docker info
    - docker --version
    - echo $CI_REGISTRY_IMAGE
    - echo $CI_COMMIT_REF_NAME
  script:
    - cp $application_prod_mysql_properties src/main/resources/application.properties
    - docker build -t $DOCKER_REGISTRY/$APP_NAME:$CI_PIPELINE_IID -t $DOCKER_REGISTRY/$APP_NAME .
    - docker push $DOCKER_REGISTRY/$APP_NAME:$CI_PIPELINE_IID
    - docker push $DOCKER_REGISTRY/$APP_NAME
  only:
    - main

deploy_stage:
  image: alpine:latest
  stage: deploy
  tags:
    - deployment
  script:
    - chmod og= $ID_RSA
    - apk update && apk add openssh-client
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY"
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker pull $TAG_COMMIT"
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker container rm -f voila-backend || true"
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker run -d --network=host -p 80:8080 --name voila-backend $TAG_COMMIT"
  environment:
    name: production
    url: http://213.232.11.195
  only:
    - master
